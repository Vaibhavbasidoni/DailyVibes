allprojects {
  repositories {
    ...
    maven { url 'https://jitpack.io' }
  }
}
// Top-level build.gradle file
buildscript {
    repositories {
        // Repositories for buildscript dependencies
        mavenCentral()
    }
    dependencies {
        // Buildscript dependencies (e.g., Gradle plugins)
        classpath 'com.someplugin:plugin:1.0.0'
    }
}

// Apply plugins and configure build settings

// Module-level build.gradle file
plugins {
    // Apply additional plugins
    id 'java'
}

repositories {
    // Repositories for project dependencies
    mavenCentral()
}

dependencies {
    // Project dependencies
    implementation 'com.github.KwabenBerko:News-API-Java:1.0.2'
}

NewsApiClient newsApiClient = new NewsApiClient("157d5c87b2f3497c99b7e61bd15a4a1d");

// /v2/everything
newsApiClient.getEverything(
  new EverythingRequest.Builder()
          .q("trump")
          .build(),
  new NewsApiClient.ArticlesResponseCallback() {
      @Override
      public void onSuccess(ArticleResponse response) {
          System.out.println(response.getArticles().get(0).getTitle());
      }

      @Override
      public void onFailure(Throwable throwable) {
          System.out.println(throwable.getMessage());
      }
  }
);
        
// /v2/top-headlines
newsApiClient.getTopHeadlines(
  new TopHeadlinesRequest.Builder()
    .q("bitcoin")
    .language("en")
    .build(),
  new NewsApiClient.ArticlesResponseCallback() {
    @Override
    public void onSuccess(ArticleResponse response) {
      System.out.println(response.getArticles().get(0).getTitle());
    }

    @Override
    public void onFailure(Throwable throwable) {
      System.out.println(throwable.getMessage());
    }
  }
);
        
// /v2/top-headlines/sources
newsApiClient.getSources(
  new SourcesRequest.Builder()
    .language("en")
    .country("us")
    .build(),
  new NewsApiClient.SourcesCallback() {
    @Override
    public void onSuccess(SourcesResponse response) {
        System.out.println(response.getSources().get(0).getName());
    }

    @Override
    public void onFailure(Throwable throwable) {
      System.out.println(throwable.getMessage());
    }
  }
);